

################################## 
### Registry

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: __NAMESPACE__-pvc
  namespace: __NAMESPACE__
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: __STORAGE_SPACE__Gi
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: __NAMESPACE__
  namespace: __NAMESPACE__
spec:
  replicas: 1
  selector:
    matchLabels:
      component: __NAMESPACE__
  template:
    metadata:
      labels:
        component: __NAMESPACE__ 
    spec:
      nodeName: __MASTER_NODENAME__ 
      volumes:
        - name: docker-auth-volume
          secret:
            secretName: __NAMESPACE__-auth-secret
        - name: docker-certs-volume
          secret:
            secretName: __NAMESPACE__-certs-secret
        - name: __NAMESPACE__-database-volume
          persistentVolumeClaim:
            claimName: __NAMESPACE__-pvc
      containers:
        - name: __NAMESPACE__
          image: registry:latest
          ports:
            - containerPort: 5000
          env:
            - name: REGISTRY_AUTH
              value: "htpasswd"
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: "Registry Realm"
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: "/auth/htpasswd"
            # - name: REGISTRY_HTTP_TLS_CERTIFICATE
            #   value: "/certs/tls.crt"
            # - name: REGISTRY_HTTP_TLS_KEY
            #   value: "/certs/tls.key"
          volumeMounts:
          - name: docker-auth-volume
            mountPath: "/auth"
          - name: docker-certs-volume
            mountPath: "/certs"
          - name: __NAMESPACE__-database-volume
            mountPath: "/var/lib/registry"
---

################################## 
### Service

apiVersion: v1
kind: Service
metadata:
  name: __NAMESPACE__-service
  namespace: __NAMESPACE__
spec:
  type: NodePort
  selector:
    component: __NAMESPACE__
  ports:
    - port: 5000
      targetPort: 5000
      nodePort: __DOCKER_PORT__
---
